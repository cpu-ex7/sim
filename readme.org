* Simulator

** ビルド

jbuilderとMenhirが必要

#+BEGIN_SRC bash
$ opam install jbuilder menhir
#+END_SRC

コンパイラも速いほうがいい

#+BEGIN_SRC bash
$ opam switch 4.05.0+flambda
$ eval `opam config env`
#+END_SRC

*** ビルドしてREPLを起動

#+BEGIN_SRC bash
$ jbuilder utop src
#+END_SRC

*** 高速な実行形式を作成

bench.mlをいじってから

#+BEGIN_SRC bash
$ jbuilder build Bench.exe
$ ./_build/default/Bench.exe
#+END_SRC

** REPLの操作

ユーザーが使うであろう関数はすべて =App= モジュールに入っているので、utopの補完を元に探そう。

よく使う関数まとめ。

| load_file      | ファイルの内容をアセンブリとして読み込む                            |
| load_string    | 文字列をアセンブリとして読み込む                                    |
| execute        | ロードしたプログラムを最後まで実行する                              |
| execute_string | コアの状態をリセットすることなく文字列をロード&実行する(デバッグ用) |
| print_assembly | アセンブラの出力を表示                                              |
| set_args       | 引数用レジスタに整数をセットする                                    |
| set_input      | コアへの入力をセットする                                            |

#+CAPTION: デモ
[[file:image/demo.png]]

ロードしたラベルとプログラム及びコアの状態は =App.print_label ()=, =App.print_program ()=, =App.print_core ()=, =App.print_verify ()= で確認できる。

[[file:image/print_label.png]]

[[file:image/print_program.png]]

[[file:image/print_verified.png]]

[[file:image/print_core.png]]
